(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', './jquery', './internal/globalize'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('./jquery'), require('./internal/globalize'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global.$, global.globalize);
        global.containDropdown = mod.exports;
    }
})(this, function (exports, module, _jquery, _internalGlobalize) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _$ = _interopRequireDefault(_jquery);

    var _globalize = _interopRequireDefault(_internalGlobalize);

    function containDropdown(dropdown, containerSelector, dynamic) {
        function getDropdownOffset() {
            return dropdown.$.offset().top - (0, _$['default'])(containerSelector).offset().top;
        }

        var container;
        var ddOffset;
        var availableArea;
        var shadowOffset = 25;

        if (dropdown.$.parents(containerSelector).length !== -1) {
            container = (0, _$['default'])(containerSelector);
            ddOffset = getDropdownOffset();
            shadowOffset = 30;
            availableArea = container.outerHeight() - ddOffset - shadowOffset;

            if (availableArea <= parseInt(dropdown.$.attr('scrollHeight'), 10)) {
                containDropdown.containHeight(dropdown, availableArea);
            } else if (dynamic) {
                containDropdown.releaseContainment(dropdown);
            }
            dropdown.reset();
        }
    };

    containDropdown.containHeight = function (dropdown, availableArea) {
        dropdown.$.css({
            height: availableArea
        });
        if (dropdown.$.css('overflowY') !== 'scroll') {
            dropdown.$.css({
                width: 15 + dropdown.$.attr('scrollWidth'),
                overflowY: 'scroll',
                overflowX: 'hidden'
            });
        }
    };

    containDropdown.releaseContainment = function (dropdown) {
        dropdown.$.css({
            height: '',
            width: '',
            overflowY: '',
            overflowX: ''
        });
    };

    (0, _globalize['default'])('containDropdown', containDropdown);

    module.exports = containDropdown;
});
//# sourceMappingURL=../../js/aui/contain-dropdown.js.map