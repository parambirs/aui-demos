(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', '../jquery', './globalize', '../unique-id'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('../jquery'), require('./globalize'), require('../unique-id'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global.$, global.globalize, global.uniqueId);
        global.addId = mod.exports;
    }
})(this, function (exports, module, _jquery, _globalize, _uniqueId) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _$ = _interopRequireDefault(_jquery);

    var _globalize2 = _interopRequireDefault(_globalize);

    var _uniqueId2 = _interopRequireDefault(_uniqueId);

    /**
     * Apply a unique ID to the element. Preserves ID if the element already has one.
     *
     * @param {Element} el Selector to find target element.
     * @param {string} prefix Optional. String to prepend to ID instead of default AUI prefix.
     *
     * @returns {undefined}
     */
    function addId(el, prefix) {
        var element = (0, _$['default'])(el);
        var addprefix = prefix || false;

        element.each(function () {
            var $el = (0, _$['default'])(this);

            if (!$el.attr('id')) {
                $el.attr('id', (0, _uniqueId2['default'])(addprefix));
            }
        });
    }

    (0, _globalize2['default'])('_addID', addId);

    module.exports = addId;
});
//# sourceMappingURL=../../../js/aui/internal/add-id.js.map