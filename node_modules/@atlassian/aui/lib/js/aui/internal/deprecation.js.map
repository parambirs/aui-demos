{"version":3,"sources":["js/aui/internal/deprecation.js"],"names":[],"mappings":"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","file":"js/aui/internal/deprecation.js","sourcesContent":["'use strict';\n\nimport $ from '../jquery';\nimport globalize from './globalize';\n\nvar has = Object.prototype.hasOwnProperty;\nvar deprecationCalls = [];\nvar deprecatedSelectorMap = [];\n\nfunction toSentenceCase (str) {\n    str += '';\n\n    if (!str) {\n        return '';\n    }\n\n    return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nfunction getDeprecatedLocation (printFrameOffset) {\n    var err = new Error();\n    var stack = err.stack || err.stacktrace;\n    var stackMessage = (stack && stack.replace(/^Error\\n/, '')) || '';\n\n    if (stackMessage) {\n        stackMessage = stackMessage.split('\\n');\n        return stackMessage[printFrameOffset + 2];\n    }\n    return stackMessage;\n}\n\nfunction logger () {\n    if (typeof console !== 'undefined' && console.warn) {\n        Function.prototype.apply.call(console.warn, console, arguments);\n    }\n}\n\n/**\n * Return a function that logs a deprecation warning to the console the first time it is called from a certain location.\n * It will also print the stack frame of the calling function.\n *\n * @param {string} displayName the name of the thing being deprecated\n * @param {object} options\n * @param {string} options.removeInVersion the version this will be removed in\n * @param {string} options.alternativeName the name of an alternative to use\n * @param {string} options.sinceVersion the version this has been deprecated since\n * @param {string} options.extraInfo extra information to be printed at the end of the deprecation log\n * @param {string} options.extraObject an extra object that will be printed at the end\n * @param {string} options.deprecationType type of the deprecation to append to the start of the deprecation message. e.g. JS or CSS\n * @return {Function} that logs the warning and stack frame of the calling function. Takes in an optional parameter for the offset of\n * the stack frame to print, the default is 0. For example, 0 will log it for the line of the calling function,\n * -1 will print the location the logger was called from\n */\nfunction getShowDeprecationMessage (displayName, options) {\n    // This can be used internally to pas in a showmessage fn\n    if (typeof displayName === 'function') {\n        return displayName;\n    }\n\n    var called = false;\n    options = options || {};\n\n    return function (printFrameOffset) {\n        var deprecatedLocation = getDeprecatedLocation(printFrameOffset ? printFrameOffset : 1) || '';\n        // Only log once if the stack frame doesn't exist to avoid spamming the console/test output\n        if (!called || deprecationCalls.indexOf(deprecatedLocation) === -1) {\n            deprecationCalls.push(deprecatedLocation);\n\n            called = true;\n\n            var deprecationType = (options.deprecationType + ' ') || '';\n\n            var message = 'DEPRECATED ' + deprecationType + '- ' + toSentenceCase(displayName) +\n            ' has been deprecated' + (options.sinceVersion ? ' since ' + options.sinceVersion : '') +\n            ' and will be removed in ' + (options.removeInVersion || 'a future release') + '.';\n\n            if (options.alternativeName) {\n                message += ' Use ' + options.alternativeName + ' instead. ';\n            }\n\n            if (options.extraInfo) {\n                message += ' ' + options.extraInfo;\n            }\n\n            if (deprecatedLocation === '') {\n                deprecatedLocation = ' \\n ' + 'No stack trace of the deprecated usage is available in your current browser.';\n            } else {\n                deprecatedLocation = ' \\n ' + deprecatedLocation;\n            }\n\n            if (options.extraObject) {\n                message += '\\n';\n                logger(message, options.extraObject, deprecatedLocation);\n            } else {\n                logger(message, deprecatedLocation);\n            }\n        }\n    };\n}\n\nfunction logCssDeprecation (selectorMap, newNode) {\n    var displayName = selectorMap.options.displayName;\n    displayName = displayName ? ' (' + displayName + ')': '';\n\n    var options = $.extend({\n        deprecationType: 'CSS',\n        extraObject: newNode\n    }, selectorMap.options);\n\n    getShowDeprecationMessage('\\'' + selectorMap.selector + '\\' pattern' + displayName, options)();\n}\n\n/**\n* Returns a wrapped version of the function that logs a deprecation warning when the function is used.\n* @param {Function} fn the fn to wrap\n* @param {string} displayName the name of the fn to be displayed in the message\n* @param {string} options.removeInVersion the version this will be removed in\n* @param {string} options.alternativeName the name of an alternative to use\n* @param {string} options.sinceVersion the version this has been deprecated since\n* @param {string} options.extraInfo extra information to be printed at the end of the deprecation log\n* @return {Function} wrapping the original function\n*/\nfunction deprecateFunctionExpression(fn, displayName, options) {\n    options = options || {};\n    options.deprecationType = options.deprecationType || 'JS';\n\n    var showDeprecationMessage = getShowDeprecationMessage(displayName || fn.name || 'this function', options);\n    return function () {\n        showDeprecationMessage();\n        return fn.apply(this, arguments);\n    };\n}\n\n/**\n* Returns a wrapped version of the constructor that logs a deprecation warning when the constructor is instantiated.\n* @param {Function} constructorFn the constructor function to wrap\n* @param {string} displayName the name of the fn to be displayed in the message\n* @param {string} options.removeInVersion the version this will be removed in\n* @param {string} options.alternativeName the name of an alternative to use\n* @param {string} options.sinceVersion the version this has been deprecated since\n* @param {string} options.extraInfo extra information to be printed at the end of the deprecation log\n* @return {Function} wrapping the original function\n*/\nfunction deprecateConstructor(constructorFn, displayName, options) {\n    options = options || {};\n    options.deprecationType = options.deprecationType || 'JS';\n\n    var deprecatedConstructor = deprecateFunctionExpression(constructorFn, displayName, options);\n    deprecatedConstructor.prototype = constructorFn.prototype;\n    $.extend(deprecatedConstructor, constructorFn); //copy static methods across;\n\n    return deprecatedConstructor;\n}\n\n\nvar supportsProperties = false;\ntry {\n    if (Object.defineProperty) {\n        Object.defineProperty({}, 'blam', {get: function () {}, set: function () {}});\n        supportsProperties = true;\n    }\n}\ncatch (e) {\n    /* IE8 doesn't support on non-DOM elements */\n}\n\n/**\n* Wraps a \"value\" object property in a deprecation warning in browsers supporting Object.defineProperty\n* @param {Object} obj the object containing the property\n* @param {string} prop the name of the property to deprecate\n* @param {string} options.removeInVersion the version this will be removed in\n* @param {string} options.displayName the display name of the property to deprecate (optional, will fall back to the property name)\n* @param {string} options.alternativeName the name of an alternative to use\n* @param {string} options.sinceVersion the version this has been deprecated since\n* @param {string} options.extraInfo extra information to be printed at the end of the deprecation log\n*/\nfunction deprecateValueProperty(obj, prop, options) {\n    if (supportsProperties) {\n        var oldVal = obj[prop];\n        options = options || {};\n        options.deprecationType = options.deprecationType || 'JS';\n\n        var displayNameOrShowMessageFn = options.displayName || prop;\n        var showDeprecationMessage = getShowDeprecationMessage(displayNameOrShowMessageFn, options);\n        Object.defineProperty(obj, prop, {\n            get: function () {\n                showDeprecationMessage();\n                return oldVal;\n            },\n            set: function (val) {\n                oldVal = val;\n                showDeprecationMessage();\n                return val;\n            }\n        });\n    }\n}\n\n/**\n* Wraps an object property in a deprecation warning, if possible. functions will always log warnings, but other\n* types of properties will only log in browsers supporting Object.defineProperty\n* @param {Object} obj the object containing the property\n* @param {string} prop the name of the property to deprecate\n* @param {string} options.removeInVersion the version this will be removed in\n* @param {string} options.displayName the display name of the property to deprecate (optional, will fall back to the property name)\n* @param {string} options.alternativeName the name of an alternative to use\n* @param {string} options.sinceVersion the version this has been deprecated since\n* @param {string} options.extraInfo extra information to be printed at the end of the deprecation log\n*/\nfunction deprecateObjectProperty(obj, prop, options) {\n    if (typeof obj[prop] === 'function') {\n        options = options || {};\n        options.deprecationType = options.deprecationType || 'JS';\n\n        var displayNameOrShowMessageFn = options.displayName || prop;\n        obj[prop] = deprecateFunctionExpression(obj[prop], displayNameOrShowMessageFn, options);\n    } else {\n        deprecateValueProperty(obj, prop, options);\n    }\n}\n\n/**\n* Wraps all an objects properties in a deprecation warning, if possible. functions will always log warnings, but other\n* types of properties will only log in browsers supporting Object.defineProperty\n* @param {Object} obj the object to be wrapped\n* @param {string} objDisplayPrefix the object's prefix to be used in logs\n* @param {string} options.removeInVersion the version this will be removed in\n* @param {string} options.alternativeNamePrefix the name of another object to prefix the deprecated objects properties with\n* @param {string} options.sinceVersion the version this has been deprecated since\n* @param {string} options.extraInfo extra information to be printed at the end of the deprecation log\n*/\nfunction deprecateAllProperties(obj, objDisplayPrefix, options) {\n    options = options || {};\n    for (var attr in obj) {\n        if (has.call(obj, attr)) {\n            options.deprecationType = options.deprecationType || 'JS';\n            options.displayName = objDisplayPrefix + attr;\n            options.alternativeName = options.alternativeNamePrefix && (options.alternativeNamePrefix + attr);\n            deprecateObjectProperty(obj, attr, $.extend({}, options));\n        }\n    }\n}\n\nfunction matchesSelector(el, selector) {\n    return (el.matches || el.msMatchesSelector || el.webkitMatchesSelector || el.mozMatchesSelector || el.oMatchesSelector).call(el, selector);\n}\n\nfunction handleAddingSelector(options) {\n    return function (selector) {\n        var selectorMap = {\n            selector: selector,\n            options: options || {}\n        };\n\n        deprecatedSelectorMap.push(selectorMap);\n\n        // Search if matches have already been added\n        var matches = document.querySelectorAll(selector);\n        for (var i = 0; i < matches.length; i++) {\n            logCssDeprecation(selectorMap, matches[i]);\n        }\n    };\n}\n\n/**\n* Return a function that logs a deprecation warning to the console the first time it is called from a certain location.\n* It will also print the stack frame of the calling function.\n*\n* @param {string|Array} selectors a selector or list of selectors that match deprecated markup\n* @param {object} options\n* @param {string} options.displayName a name describing these selectors\n* @param {string} options.alternativeName the name of an alternative to use\n* @param {string} options.removeInVersion the version these will be removed in\n* @param {string} options.sinceVersion the version these have been deprecated since\n* @param {string} options.extraInfo extra information to be printed at the end of the deprecation log\n*/\nfunction deprecateCSS(selectors, options) {\n    if (!window.MutationObserver) {\n        logger('CSS could not be deprecated as Mutation Observer was not found.');\n        return;\n    }\n\n    if (typeof selectors === 'string') {\n        selectors = [selectors];\n    }\n\n    selectors.forEach(handleAddingSelector(options));\n}\n\nfunction testAndHandleDeprecation(newNode) {\n    return function (selectorMap) {\n        if (matchesSelector(newNode, selectorMap.selector)) {\n            logCssDeprecation(selectorMap, newNode);\n        }\n    };\n}\n\nif (window.MutationObserver) {\n    var observer = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n            // TODO - should this also look at class changes, if possible?\n            var addedNodes = mutation.addedNodes;\n\n            for (var i = 0; i < addedNodes.length; i++) {\n                var newNode = addedNodes[i];\n                if (newNode.nodeType === 1) {\n                    deprecatedSelectorMap.forEach(testAndHandleDeprecation(newNode));\n                }\n            }\n        });\n    });\n\n    var config = {\n        childList: true,\n        subtree: true\n    };\n\n    observer.observe(document, config);\n}\n\nvar deprecate = {\n    fn: deprecateFunctionExpression,\n    construct: deprecateConstructor,\n    css: deprecateCSS,\n    prop: deprecateObjectProperty,\n    obj: deprecateAllProperties,\n    propertyDeprecationSupported: supportsProperties,\n    getMessageLogger: getShowDeprecationMessage\n};\n\nglobalize('deprecate', deprecate);\n\nexport {\n    deprecateFunctionExpression as fn,\n    deprecateConstructor as construct,\n    deprecateCSS as css,\n    deprecateObjectProperty as prop,\n    deprecateAllProperties as obj,\n    supportsProperties as propertyDeprecationSupported,\n    getShowDeprecationMessage as getMessageLogger\n};\n"],"sourceRoot":"/source/"}