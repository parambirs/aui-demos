{"version":3,"sources":["js/aui/internal/state.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,gBAAY,CAAC;;AAEb,aAAS,KAAK,CAAE,OAAO,EAAE;AACrB,eAAO;;;;;;;AAOH,eAAG,EAAE,aAAU,SAAS,EAAE,UAAU,EAAE;AAClC,oBAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;AAC9B,2BAAO,CAAC,MAAM,GAAG,EAAE,CAAC;iBACvB;;AAED,uBAAO,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;aAC1C;;;;;;;AAOD,eAAG,EAAE,aAAU,SAAS,EAAE;AACtB,oBAAI,OAAO,CAAC,MAAM,EAAE;AAChB,2BAAO,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBACpC;aACJ;SACJ,CAAC;KACL;;qBAEc,KAAK","file":"js/aui/internal/state.js","sourcesContent":["'use strict';\n\nfunction state (element) {\n    return {\n        /**\n         * sets an internal state on a component element\n         * @param element the element to which the state will be added\n         * @param stateName the name of the state\n         * @param stateValue the value that the state will be changed to\n         */\n        set: function (stateName, stateValue) {\n            if (element._state === undefined) {\n                element._state = {};\n            }\n\n            element._state[stateName] = stateValue;\n        },\n\n        /**\n         * gets an internal state on a component element\n         * @param element the element to which the state will be added\n         * @param stateName the name of the state\n         */\n        get: function (stateName) {\n            if (element._state) {\n                return element._state[stateName];\n            }\n        }\n    };\n}\n\nexport default state;\n"],"sourceRoot":"/source/"}