(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module);
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod);
        global.state = mod.exports;
    }
})(this, function (exports, module) {
    'use strict';

    function state(element) {
        return {
            /**
             * sets an internal state on a component element
             * @param element the element to which the state will be added
             * @param stateName the name of the state
             * @param stateValue the value that the state will be changed to
             */
            set: function set(stateName, stateValue) {
                if (element._state === undefined) {
                    element._state = {};
                }

                element._state[stateName] = stateValue;
            },

            /**
             * gets an internal state on a component element
             * @param element the element to which the state will be added
             * @param stateName the name of the state
             */
            get: function get(stateName) {
                if (element._state) {
                    return element._state[stateName];
                }
            }
        };
    }

    module.exports = state;
});
//# sourceMappingURL=../../../js/aui/internal/state.js.map