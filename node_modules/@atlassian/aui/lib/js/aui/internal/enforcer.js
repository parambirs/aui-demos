(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', './log'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('./log'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global.logger);
        global.enforcer = mod.exports;
    }
})(this, function (exports, module, _log) {
    'use strict';

    function enforcer(element) {

        function attributeExists(attributeName) {
            var errorMessage = attributeName + ' wasn\'t defined';

            return satisfiesRules(function () {
                return element.hasAttribute(attributeName);
            }, errorMessage);
        }

        function refersTo(attributeName) {

            if (!attributeExists(attributeName, element)) {
                return false;
            }

            var desiredId = element.getAttribute(attributeName);
            var errorMessage = 'an element with id set to "' + desiredId + '" was not found';

            return satisfiesRules(function () {
                return document.getElementById(desiredId);
            }, errorMessage);
        }

        function ariaControls() {
            return refersTo('aria-controls');
        }

        function ariaOwns() {
            return refersTo('aria-owns');
        }

        function satisfiesRules(predicate, message) {
            if (!predicate()) {
                if (element) {
                    _log.error(message, element);
                } else {
                    _log.error(message);
                }
                return false;
            }
            return true;
        }

        return {
            attributeExists: attributeExists,
            refersTo: refersTo,
            satisfiesRules: satisfiesRules,
            ariaControls: ariaControls,
            ariaOwns: ariaOwns
        };
    }

    module.exports = enforcer;
});
//# sourceMappingURL=../../../js/aui/internal/enforcer.js.map