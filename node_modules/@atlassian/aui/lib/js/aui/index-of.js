(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', './internal/globalize'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('./internal/globalize'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global.globalize);
        global.indexOf = mod.exports;
    }
})(this, function (exports, module, _internalGlobalize) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _globalize = _interopRequireDefault(_internalGlobalize);

    /**
     * Finds the index of an element in the array.
     *
     * @param {Array} The array being searched.
     * @param {Mixed} item Element which will be searched for.
     * @param {Integer} fromIndex The index from which the item will be searched. Negative values will search from the end of the array.
     *
     * @returns {Integer}
     */
    function indexOf(array, item, fromIndex) {
        var length = array.length;

        if (!fromIndex) {
            fromIndex = 0;
        } else if (fromIndex < 0) {
            fromIndex = Math.max(0, length + fromIndex);
        }

        for (var i = fromIndex; i < length; i++) {
            if (array[i] === item) {
                return i;
            }
        }

        return -1;
    }

    (0, _globalize['default'])('indexOf', indexOf);

    module.exports = indexOf;
});
//# sourceMappingURL=../../js/aui/index-of.js.map