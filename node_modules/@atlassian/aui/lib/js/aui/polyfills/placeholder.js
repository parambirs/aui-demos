(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', '../jquery', '../internal/skate'], factory);
    } else if (typeof exports !== 'undefined') {
        factory(exports, require('../jquery'), require('../internal/skate'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, global.$, global.skate);
        global.placeholder = mod.exports;
    }
})(this, function (exports, _jquery, _internalSkate) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _$ = _interopRequireDefault(_jquery);

    var _skate = _interopRequireDefault(_internalSkate);

    (function () {
        if ('placeholder' in document.createElement('input')) {
            return;
        }

        function applyDefaultText(input) {
            var value = String(input.value).trim();
            if (!value.length) {
                input.value = input.getAttribute('placeholder');
                (0, _$['default'])(input).addClass('aui-placeholder-shown');
            }
        }

        (0, _skate['default'])('placeholder', {
            type: _skate['default'].type.ATTRIBUTE,
            events: {
                blur: applyDefaultText,
                focus: function focus(input) {
                    if (input.value === input.getAttribute('placeholder')) {
                        input.value = '';
                        (0, _$['default'])(input).removeClass('aui-placeholder-shown');
                    }
                }
            },
            created: applyDefaultText
        });
    })();
});
//# sourceMappingURL=../../../js/aui/polyfills/placeholder.js.map