(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', './underscore', './backbone', './internal/globalize'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('./underscore'), require('./backbone'), require('./internal/globalize'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global._, global.Backbone, global.globalize);
        global.queryInput = mod.exports;
    }
})(this, function (exports, module, _underscore, _backbone, _internalGlobalize) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _2 = _interopRequireDefault(_underscore);

    var _Backbone = _interopRequireDefault(_backbone);

    var _globalize = _interopRequireDefault(_internalGlobalize);

    var QueryInput = _Backbone['default'].View.extend({
        initialize: function initialize(options) {
            _2['default'].bindAll(this, 'changed', 'val');
            this._lastValue = this.val();
            this.$el.bind('keyup focus', this.changed);
        },

        val: function val() {
            return this.$el.val.apply(this.$el, arguments);
        },

        changed: function changed() {
            if (this._lastValue != this.val()) {
                this.trigger('change', this.val());
                this._lastValue = this.val();
            }
        }
    });

    (0, _globalize['default'])('QueryInput', QueryInput);

    module.exports = QueryInput;
});
//# sourceMappingURL=../../js/aui/query-input.js.map