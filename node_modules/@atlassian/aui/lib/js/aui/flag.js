(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', './jquery', './internal/animation', './internal/amdify', './internal/globalize', './key-code', './template'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('./jquery'), require('./internal/animation'), require('./internal/amdify'), require('./internal/globalize'), require('./key-code'), require('./template'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global.$, global.animation, global.amdify, global.globalize, global.keyCode, global.template);
        global.flag = mod.exports;
    }
})(this, function (exports, module, _jquery, _internalAnimation, _internalAmdify, _internalGlobalize, _keyCode, _template) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _$ = _interopRequireDefault(_jquery);

    var _amdify = _interopRequireDefault(_internalAmdify);

    var _globalize = _interopRequireDefault(_internalGlobalize);

    var _keyCode2 = _interopRequireDefault(_keyCode);

    var _template2 = _interopRequireDefault(_template);

    var AUTO_CLOSE_TIME = 5000;
    var ID_FLAG_CONTAINER = 'aui-flag-container';
    var defaultOptions = {
        body: '',
        close: 'manual',
        title: '',
        type: 'info'
    };

    function flag(options) {
        options = _$['default'].extend({}, defaultOptions, options);

        var $flag = renderFlagElement(options);
        extendFlagElement($flag);

        if (options.close === 'auto') {
            makeCloseable($flag);
            makeAutoClosable($flag);
        } else if (options.close === 'manual') {
            makeCloseable($flag);
        }

        pruneFlagContainer();

        return insertFlag($flag);
    }

    function extendFlagElement($flag) {
        var flag = $flag[0];

        flag.close = function () {
            closeFlag($flag);
        };
    }

    function renderFlagElement(options) {
        var html = '<div class="aui-flag">' + '<div class="aui-message aui-message-{type} {type} {closeable} shadowed">' + '<p class="title">' + '<strong>{title}</strong>' + '</p>' + '{body}<!-- .aui-message -->' + '</div>' + '</div>';
        var rendered = (0, _template2['default'])(html).fill({
            'body:html': options.body || '',
            closeable: options.close === 'never' ? '' : 'closeable',
            title: options.title || '',
            type: options.type
        }).toString();

        return (0, _$['default'])(rendered);
    }

    function makeCloseable($flag) {
        var $icon = (0, _$['default'])('<span class="aui-icon icon-close" role="button" tabindex="0"></span>');

        $icon.click(function () {
            closeFlag($flag);
        });

        $icon.keypress(function (e) {
            if (e.which === _keyCode2['default'].ENTER || e.which === _keyCode2['default'].SPACE) {
                closeFlag($flag);
                e.preventDefault();
            }
        });

        return $flag.find('.aui-message').append($icon)[0];
    }

    function makeAutoClosable($flag) {
        $flag.find('.aui-message').addClass('aui-will-close');
        setTimeout(function () {
            $flag[0].close();
        }, AUTO_CLOSE_TIME);
    }

    function closeFlag($flagToClose) {
        var flag = $flagToClose.get(0);

        flag.setAttribute('aria-hidden', 'true');
        flag.dispatchEvent(new CustomEvent('aui-flag-close', { bubbles: true }));

        return flag;
    }

    function pruneFlagContainer() {
        var $container = findContainer();
        var $allFlags = $container.find('.aui-flag');

        $allFlags.get().forEach(function (flag) {
            var isFlagAriaHidden = flag.getAttribute('aria-hidden') === 'true';

            if (isFlagAriaHidden) {
                (0, _$['default'])(flag).remove();
            }
        });
    }

    function findContainer() {
        return (0, _$['default'])('#' + ID_FLAG_CONTAINER);
    }

    function insertFlag($flag) {
        var $flagContainer = findContainer();

        if (!$flagContainer.length) {
            $flagContainer = (0, _$['default'])('<div id="' + ID_FLAG_CONTAINER + '"></div>');
            (0, _$['default'])('body').prepend($flagContainer);
        }

        $flag.appendTo($flagContainer);
        (0, _internalAnimation.recomputeStyle)($flag);

        return $flag.attr('aria-hidden', 'false')[0];
    }

    (0, _amdify['default'])('aui/flag', flag);
    (0, _globalize['default'])('flag', flag);
    module.exports = flag;
});
//# sourceMappingURL=../../js/aui/flag.js.map