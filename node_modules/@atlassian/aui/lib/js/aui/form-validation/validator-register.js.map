{"version":3,"sources":["js/aui/form-validation/validator-register.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,gBAAY,CAAC;;;;;;;;AAMb,QAAI,4BAA4B,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;AACjG,QAAI,WAAU,GAAG,EAAE,CAAC;;AAEpB,aAAS,mBAAmB,CAAE,kBAAkB,EAAE;AAC9C,YAAI,gBAAgB,GAAG,KAAK,CAAC;;AAE7B,0BAAkB,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACnC,gBAAI,UAAU,GAAG,cAAE,OAAO,CAAC,GAAG,EAAE,4BAA4B,CAAC,KAAK,CAAC,CAAC,CAAC;;AAErE,gBAAI,UAAU,EAAE;AACZ,gCAAgB,GAAG,GAAG,CAAC;aAC1B;;AAED,mBAAO,UAAU,CAAC;SACrB,CAAC,CAAC;;AAEH,eAAO,gBAAgB,CAAC;KAC3B;;;;;;;;;AASD,aAAS,iBAAiB,CAAE,OAAO,EAAE,iBAAiB,EAAE;AACpD,YAAI,eAAe,CAAC;;AAEpB,YAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC7B,2BAAe,GAAG,OAAO,CAAC;SAC7B,MAAM;AACH,gBAAI,gBAAgB,GAAG,mBAAmB,CAAC,OAAO,CAAC,CAAC;;AAEpD,gBAAI,gBAAgB,EAAE;AAClB,6BAAO,IAAI,CAAC,qDAAqD,GAAG,gBAAgB,GAAG,kCAAkC,CAAC,CAAC;AAC3H,uBAAO,KAAK,CAAC;aAChB;;AAED,2BAAe,GAAG,uBAAuB,GAAG,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,GAAG,CAAC;SAC7F;;AAED,YAAI,SAAS,GAAG;AACZ,6BAAiB,EAAE,iBAAiB;AACpC,4BAAgB,EAAE,eAAe;SACpC,CAAC;;AAEF,mBAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;AAE3B,eAAO,SAAS,CAAC;KACpB;;AAED,QAAI,iBAAiB,GAAG;AACpB,gBAAQ,EAAE,iBAAiB;AAC3B,kBAAU,EAAE,sBAAY;AACpB,mBAAO,WAAU,CAAC;SACrB;KACJ,CAAC;;AAEF,4BAAO,wCAAwC,EAAE,iBAAiB,CAAC,CAAC;;qBAErD,iBAAiB","file":"js/aui/form-validation/validator-register.js","sourcesContent":["'use strict';\n\nimport $ from '../jquery';\nimport * as logger from '../internal/log';\nimport amdify from '../internal/amdify';\n\nvar ATTRIBUTE_RESERVED_ARGUMENTS = ['displayfield', 'watchfield', 'when', 'novalidate', 'state'];\nvar validators = [];\n\nfunction getReservedArgument (validatorArguments) {\n    var reservedArgument = false;\n\n    validatorArguments.some(function (arg) {\n        var isReserved = $.inArray(arg, ATTRIBUTE_RESERVED_ARGUMENTS) !== -1;\n\n        if (isReserved) {\n            reservedArgument = arg;\n        }\n\n        return isReserved;\n    });\n\n    return reservedArgument;\n}\n\n/**\n * Register a validator that can be used to validate fields. The main entry point for validator plugins.\n * @param trigger - when to run the validator. Can be an array of arguments, or a selector\n * @param validatorFunction - the function that will be called on the field to determine validation. Receives\n *      field - the field that is being validated\n *      args - the arguments that have been specified in HTML markup.\n */\nfunction registerValidator (trigger, validatorFunction) {\n    var triggerSelector;\n\n    if (typeof trigger === 'string') {\n        triggerSelector = trigger;\n    } else {\n        var reservedArgument = getReservedArgument(trigger);\n\n        if (reservedArgument) {\n            logger.warn('Validators cannot be registered with the argument \"' + reservedArgument + '\", as it is a reserved argument.');\n            return false;\n        }\n\n        triggerSelector = '[data-aui-validation-' + trigger.join('],[data-aui-validation-') + ']';\n    }\n\n    var validator = {\n        validatorFunction: validatorFunction,\n        validatorTrigger: triggerSelector\n    };\n\n    validators.push(validator);\n\n    return validator;\n}\n\nvar validatorRegister = {\n    register: registerValidator,\n    validators: function () {\n        return validators;\n    }\n};\n\namdify('aui/form-validation/validator-register', validatorRegister);\n\nexport default validatorRegister;\n"],"sourceRoot":"/source/"}