(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', './jquery', './internal/log', './internal/amdify', './internal/skate'], factory);
    } else if (typeof exports !== 'undefined') {
        factory(exports, require('./jquery'), require('./internal/log'), require('./internal/amdify'), require('./internal/skate'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, global.$, global.logger, global.amdify, global.skate);
        global.button = mod.exports;
    }
})(this, function (exports, _jquery, _internalLog, _internalAmdify, _internalSkate) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _$ = _interopRequireDefault(_jquery);

    var _amdify = _interopRequireDefault(_internalAmdify);

    var _skate = _interopRequireDefault(_internalSkate);

    function _isBusy(button) {
        return button.hasAttribute('aria-busy') && button.getAttribute('aria-busy') === 'true';
    }

    function isInputNode(button) {
        return button.nodeName === 'INPUT';
    }

    (0, _skate['default'])('aui-button', {
        type: _skate['default'].type.CLASSNAME,
        prototype: {
            /**
             * Adds a spinner to the button and hides the text
             *
             * @returns {HTMLElement}
             */
            busy: function busy() {
                if (isInputNode(this) || _isBusy(this)) {
                    _internalLog.warn('It is not valid to call busy() on an input button.');
                    return this;
                }

                (0, _$['default'])(this).spin();
                this.setAttribute('aria-busy', true);
                this.setAttribute('busy', '');

                return this;
            },

            /**
             * Removes the spinner and shows the tick on the button
             *
             * @returns {HTMLElement}
             */
            idle: function idle() {
                if (isInputNode(this) || !_isBusy(this)) {
                    _internalLog.warn('It is not valid to call idle() on an input button.');
                    return this;
                }

                (0, _$['default'])(this).spinStop();
                this.removeAttribute('aria-busy');
                this.removeAttribute('busy');

                return this;
            },

            /**
             * Removes the spinner and shows the tick on the button
             *
             * @returns {Boolean}
             */
            isBusy: function isBusy() {
                if (isInputNode(this)) {
                    _internalLog.warn('It is not valid to call isBusy() on an input button.');
                    return false;
                }

                return _isBusy(this);
            }
        }
    });

    (0, _amdify['default'])('aui/button');
});
//# sourceMappingURL=../../js/aui/button.js.map