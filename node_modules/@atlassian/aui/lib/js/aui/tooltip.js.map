{"version":3,"sources":["js/aui/tooltip.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,gBAAY,CAAC;;;;;;AAKb,kBAAE,EAAE,CAAC,OAAO,GAAG,UAAU,OAAO,EAAE;AAC9B,eAAO,IAAI,CAAC,IAAI,CAAC,YAAU;AACvB,gBAAI,KAAK,GAAG,mBAAE,IAAI,CAAC,CAAC;AACpB,gBAAI,UAAU,GAAG,cAAE,MAAM,CAAC,EAAE,EAAE,cAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;;;AAG9D,gBAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC7B,qBAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;AAErB,oBAAG,OAAO,KAAK,SAAS,EAAC;AACrB,wBAAG,UAAU,CAAC,IAAI,EAAC;AACf,2CAAE,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;qBAClD,MAAM;AACH,6BAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;qBAC1B;iBACJ;AACD,uBAAO;aACV;;AAED,iBAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;AAExB,gBAAI,UAAU,CAAC,WAAW,KAAK,UAAU,CAAC,OAAO,KAAK,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,KAAK,OAAO,CAAA,AAAC,EAAE;AAC/H,oBAAI,OAAO,GAAG,SAAV,OAAO,GAAc;AACrB,yBAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBACvB,CAAC;;AAEF,oBAAI,UAAU,CAAC,IAAI,EAAE;AACjB,uCAAE,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;iBAC9D,MAAM;AACH,yBAAK,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;iBACtC;aACJ;SACJ,CAAC,CAAC;KACN,CAAC;;AAEF,kBAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,GAAG;AACpB,eAAO,EAAE,GAAG;AACZ,cAAM,EAAE,CAAC;AACT,eAAO,EAAE,GAAG;AACZ,iBAAS,EAAE,IAAI;AACf,mBAAW,EAAE,IAAI;AACjB,YAAI,EAAE,IAAI;KACb,CAAC","file":"js/aui/tooltip.js","sourcesContent":["'use strict';\n\nimport $ from './jquery';\nimport '../../js-vendor/jquery/jquery.tipsy';\n\n$.fn.tooltip = function (options) {\n    return this.each(function(){\n        var $this = $(this);\n        var allOptions = $.extend({}, $.fn.tooltip.defaults, options);\n\n        // Pass string values straight to tipsy\n        if (typeof options === 'string') {\n            $this.tipsy(options);\n\n            if(options === 'destroy'){\n                if(allOptions.live){\n                    $($this.context).off('.tipsy', $this.selector);\n                } else {\n                    $this.unbind('.tipsy');\n                }\n            }\n            return;\n        }\n\n        $this.tipsy(allOptions);\n\n        if (allOptions.hideOnClick && (allOptions.trigger === 'hover' || !allOptions.trigger && $this.tipsy.defaults.trigger === 'hover')) {\n            var onClick = function() {\n                $this.tipsy('hide');\n            };\n\n            if (allOptions.live) {\n                $($this.context).on('click.tipsy', this.selector, onClick);\n            } else {\n                $this.bind('click.tipsy', onClick);\n            }\n        }\n    });\n};\n\n$.fn.tooltip.defaults = {\n    opacity: 1.0,\n    offset: 1,\n    delayIn: 500,\n    hoverable: true,\n    hideOnClick: true,\n    aria: true\n};\n"],"sourceRoot":"/source/"}