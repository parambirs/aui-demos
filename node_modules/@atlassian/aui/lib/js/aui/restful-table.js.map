{"version":3,"sources":["js/aui/restful-table.js"],"names":[],"mappings":"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","file":"js/aui/restful-table.js","sourcesContent":["'use strict';\n\nimport $ from './jquery';\nimport * as logger from './internal/log';\nimport Backbone from './backbone';\nimport classNames from './restful-table/class-names';\nimport CustomCreateView from './restful-table/custom-create-view';\nimport CustomEditView from './restful-table/custom-edit-view';\nimport CustomReadView from './restful-table/custom-read-view';\nimport dataKeys from './restful-table/data-keys';\nimport EditRow from './restful-table/edit-row';\nimport EntryModel from './restful-table/entry-model';\nimport events from './restful-table/events';\nimport globalize from './internal/globalize';\nimport i18n from './i18n';\nimport Row from './restful-table/row';\nimport throbber from './restful-table/throbber';\n\n/**\n * Triggers a custom event on the document object\n *\n * @param {String} name - name of event\n * @param {Array} args - args for event handler\n */\nfunction triggerEvt (name, args) {\n    $(document).trigger(name, args);\n}\n\n/**\n * Some generic error handling that fires event in multiple contexts\n * - on document\n * - on Instance\n * - on document with prefixed id.\n *\n * @param evt\n * @param inst\n * @param args\n */\nfunction triggerEvtForInst (evt, inst, args) {\n    $(inst).trigger(evt, args);\n    triggerEvt(evt, args);\n    if (inst.id) {\n        triggerEvt(inst.id + '_' + evt, args);\n    }\n}\n\n/**\n * A table whose entries/rows can be retrieved, added and updated via REST (CRUD).\n * It uses backbone.js to sync the table's state back to the server, avoiding page refreshes.\n *\n * @class RestfulTable\n */\nvar RestfulTable = Backbone.View.extend({\n    /**\n     * @param {!Object} options\n     * ... {!Object} resources\n     * ... ... {(string|function(function(Array.<Object>)))} all - URL of REST resource OR function that retrieves all entities.\n     * ... ... {string} self - URL of REST resource to sync a single entities state (CRUD).\n     * ... {!(selector|Element|jQuery)} el - Table element or selector of the table element to populate.\n     * ... {!Array.<Object>} columns - Which properties of the entities to render. The id of a column maps to the property of an entity.\n     * ... {Object} views\n     * ... ... {RestfulTable.EditRow} editRow - Backbone view that renders the edit & create row. Your view MUST extend RestfulTable.EditRow.\n     * ... ... {RestfulTable.Row} row - Backbone view that renders the readonly row. Your view MUST extend RestfulTable.Row.\n     * ... {boolean} allowEdit - Is the table editable. If true, clicking row will switch it to edit state. Default true.\n     * ... {boolean} allowDelete - Can entries be removed from the table, default true.\n     * ... {boolean} allowCreate - Can new entries be added to the table, default true.\n     * ... {boolean} allowReorder - Can we drag rows to reorder them, default false.\n     * ... {boolean} autoFocus - Automatically set focus to first field on init, default false.\n     * ... {boolean} reverseOrder - Reverse the order of rows, default false.\n     * ... {boolean} silent - Do not trigger a \"refresh\" event on sort, default false.\n     * ... {String} id - The id for the table. This id will be used to fire events specific to this instance.\n     * ... {string} createPosition - If set to \"bottom\", place the create form at the bottom of the table instead of the top.\n     * ... {string} addPosition - If set to \"bottom\", add new rows at the bottom of the table instead of the top. If undefined, createPosition will be used to define where to add the new row.\n     * ... {string} noEntriesMsg - Text to display under the table header if it is empty, default empty.\n     * ... {string} loadingMsg - Text/HTML to display while loading, default \"Loading\".\n     * ... {string} submitAccessKey - Access key for submitting.\n     * ... {string} cancelAccessKey - Access key for canceling.\n     * ... {function(Object): (string|function(number, string): string)} deleteConfirmation - HTML to display in popup to confirm deletion.\n     * ... {function(string): (selector|jQuery|Element)} fieldFocusSelector - Element to focus on given a name.\n     * ... {EntryModel} model - Backbone model representing a row, default EntryModel.\n     * ... {Backbone.Collection} Collection - Backbone collection representing the entire table, default Backbone.Collection.\n     */\n    initialize: function (options) {\n        var instance = this;\n\n        // combine default and user options\n        instance.options = $.extend(true, instance._getDefaultOptions(options), options);\n\n        // Prefix events for this instance with this id.\n        instance.id = this.options.id;\n\n        // faster lookup\n        instance._event = events;\n        instance.classNames = classNames;\n        instance.dataKeys = dataKeys;\n\n        // shortcuts to popular elements\n        this.$table = $(options.el)\n            .addClass(this.classNames.RESTFUL_TABLE)\n            .addClass(this.classNames.ALLOW_HOVER)\n            .addClass('aui')\n            .addClass(instance.classNames.LOADING);\n\n        this.$table.wrapAll(\"<form class='aui' action='#' />\");\n\n        this.$thead = $('<thead/>');\n        this.$theadRow = $('<tr />').appendTo(this.$thead);\n        this.$tbody = $('<tbody/>');\n\n        if (!this.$table.length) {\n            throw new Error('RestfulTable: Init failed! The table you have specified [' + this.$table.selector + '] cannot be found.');\n        }\n\n        if (!this.options.columns) {\n            throw new Error(\"RestfulTable: Init failed! You haven't provided any columns to render.\");\n        }\n\n        // Let user know the table is loading\n        this.showGlobalLoading();\n        this.options.columns.forEach(function (column) {\n            var header = $.isFunction(column.header) ? column.header() : column.header;\n            if (typeof header === 'undefined') {\n                logger.warn('You have not specified [header] for column [' + column.id + ']. Using id for now...');\n                header = column.id;\n            }\n\n            instance.$theadRow.append('<th>' + header + '</th>');\n        });\n\n        // columns for submit buttons and loading indicator used when editing\n        instance.$theadRow.append('<th></th><th></th>');\n\n        // create a new Backbone collection to represent rows (http://documentcloud.github.com/backbone/#Collection)\n        this._models = this._createCollection();\n\n        // shortcut to the class we use to create rows\n        this._rowClass = this.options.views.row;\n\n        this.editRows = []; // keep track of rows that are being edited concurrently\n\n        this.$table.closest('form').submit(function (e) {\n            if (instance.focusedRow) {\n                // Delegates saving of row. See EditRow.submit\n                instance.focusedRow.trigger(instance._event.SAVE);\n            }\n            e.preventDefault();\n        });\n\n        if (this.options.allowReorder) {\n            // Add allowance for another cell to the <thead>\n            this.$theadRow.prepend('<th />');\n\n            // Allow drag and drop reordering of rows\n            this.$tbody.sortable({\n                handle: '.' + this.classNames.DRAG_HANDLE,\n                helper: function (e, elt) {\n                    var helper = $('<div/>').attr('class', elt.attr('class')).addClass(instance.classNames.MOVEABLE);\n                    elt.children().each(function (i) {\n                        var $td = $(this);\n\n                        // .offsetWidth/.outerWidth() is broken in webkit for tables, so we do .clientWidth + borders\n                        // Need to coerce the border-left-width to an in because IE - http://bugs.jquery.com/ticket/10855\n                        var borderLeft = parseInt(0 + $td.css('border-left-width'), 10);\n                        var borderRight = parseInt(0 + $td.css('border-right-width'), 10);\n                        var width = $td[0].clientWidth + borderLeft + borderRight;\n\n                        helper.append($('<div/>').html($td.html()).attr('class', $td.attr('class')).width(width));\n                    });\n\n                    helper = $(\"<div class='aui-restfultable-readonly'/>\").append(helper); // Basically just to get the styles.\n                    helper.css({left: elt.offset().left}); // To align with the other table rows, since we've locked scrolling on x.\n                    helper.appendTo(document.body);\n\n                    return helper;\n                },\n                start: function (event, ui) {\n                    var cachedHeight = ui.helper[0].clientHeight;\n                    var $this = ui.placeholder.find('td');\n\n                    // Make sure that when we start dragging widths do not change\n                    ui.item\n                            .addClass(instance.classNames.MOVEABLE)\n                            .children().each(function (i) {\n                                $(this).width($this.eq(i).width());\n                            });\n\n                    // Create a <td> to add to the placeholder <tr> to inherit CSS styles.\n                    var td = '<td colspan=\"' + instance.getColumnCount() + '\">&nbsp;</td>';\n\n                    ui.placeholder.html(td).css({\n                        height: cachedHeight,\n                        visibility: 'visible'\n                    });\n\n                    // Stop hover effects etc from occuring as we move the mouse (while dragging) over other rows\n                    instance.getRowFromElement(ui.item[0]).trigger(instance._event.MODAL);\n                },\n                stop: function (event, ui) {\n                    if ($(ui.item[0]).is(':visible')) {\n                        ui.item\n                                .removeClass(instance.classNames.MOVEABLE)\n                                .children().attr('style', '');\n\n                        ui.placeholder.removeClass(instance.classNames.ROW);\n\n                        // Return table to a normal state\n                        instance.getRowFromElement(ui.item[0]).trigger(instance._event.MODELESS);\n                    }\n                },\n                update: function (event, ui) {\n                    var context = {\n                        row: instance.getRowFromElement(ui.item[0]),\n                        item: ui.item,\n                        nextItem: ui.item.next(),\n                        prevItem: ui.item.prev()\n                    };\n\n                    instance.move(context);\n                },\n                axis: 'y',\n                delay: 0,\n                containment: 'document',\n                cursor: 'move',\n                scroll: true,\n                zIndex: 8000\n            });\n\n            // Prevent text selection while reordering.\n            this.$tbody.bind('selectstart mousedown', function (event) {\n                return !$(event.target).is('.' + instance.classNames.DRAG_HANDLE);\n            });\n        }\n\n\n        if (this.options.allowCreate !== false) {\n\n            // Create row responsible for adding new entries ...\n            this._createRow = new this.options.views.editRow({\n                columns: this.options.columns,\n                isCreateRow: true,\n                model: this.options.model.extend({\n                    url: function () {\n                        return instance.options.resources.self;\n                    }\n                }),\n                cancelAccessKey: this.options.cancelAccessKey,\n                submitAccessKey: this.options.submitAccessKey,\n                allowReorder: this.options.allowReorder,\n                fieldFocusSelector: this.options.fieldFocusSelector\n            })\n                    .bind(this._event.CREATED, function (values) {\n                        if ((instance.options.addPosition == undefined && instance.options.createPosition === 'bottom')\n                            || instance.options.addPosition === 'bottom') {\n                            instance.addRow(values);\n                        } else {\n                            instance.addRow(values, 0);\n                        }\n                    })\n                    .bind(this._event.VALIDATION_ERROR, function () {\n                        this.trigger(instance._event.FOCUS);\n                    })\n                    .render({\n                        errors: {},\n                        values: {}\n                    });\n\n            // ... and appends it as the first row\n            this.$create = $('<tbody class=\"' + this.classNames.CREATE + '\" />')\n                    .append(this._createRow.el);\n\n            // Manage which row has focus\n            this._applyFocusCoordinator(this._createRow);\n\n            // focus create row\n            this._createRow.trigger(this._event.FOCUS);\n        }\n\n        // when a model is removed from the collection, remove it from the viewport also\n        this._models.bind('remove', function (model) {\n            instance.getRows().forEach(function (row) {\n                if (row.model === model) {\n                    if (row.hasFocus() && instance._createRow) {\n                        instance._createRow.trigger(instance._event.FOCUS);\n                    }\n                    instance.removeRow(row);\n                }\n            });\n        });\n\n        this.fetchInitialResources();\n    },\n\n    fetchInitialResources: function () {\n        var instance = this;\n        if ($.isFunction(this.options.resources.all)) {\n            this.options.resources.all(function (entries) {\n                instance.populate(entries);\n            });\n        } else {\n            $.get(this.options.resources.all, function (entries) {\n                instance.populate(entries);\n            });\n        }\n    },\n\n    move: function (context) {\n\n        var instance = this;\n\n        var createRequest = function (afterElement) {\n            if (!afterElement.length) {\n                return {\n                    position: 'First'\n                };\n            } else {\n                var afterModel = instance.getRowFromElement(afterElement).model;\n                return {\n                    after: afterModel.url()\n                };\n            }\n        };\n\n        if (context.row) {\n\n            var data = instance.options.reverseOrder ? createRequest(context.nextItem) : createRequest(context.prevItem);\n\n            $.ajax({\n                url: context.row.model.url() + '/move',\n                type: 'POST',\n                dataType: 'json',\n                contentType: 'application/json',\n                data: JSON.stringify(data),\n                complete: function () {\n                    // hides loading indicator (spinner)\n                    context.row.hideLoading();\n                },\n                success: function (xhr) {\n                    AJS.triggerEvtForInst(instance._event.REORDER_SUCCESS, instance, [xhr]);\n                },\n                error: function (xhr) {\n                    var responseData = $.parseJSON(xhr.responseText || xhr.data);\n                    AJS.triggerEvtForInst(instance._event.SERVER_ERROR, instance, [responseData, xhr, this]);\n                }\n            });\n\n            // shows loading indicator (spinner)\n            context.row.showLoading();\n        }\n    },\n\n    _createCollection: function () {\n        var instance = this;\n\n        // create a new Backbone collection to represent rows (http://documentcloud.github.com/backbone/#Collection)\n        var RowsAwareCollection = this.options.Collection.extend({\n            // Force the collection to re-sort itself. You don't need to call this under normal\n            // circumstances, as the set will maintain sort order as each item is added.\n            sort:function (options) {\n                options || (options = {});\n                if (!this.comparator) {\n                    throw new Error('Cannot sort a set without a comparator');\n                }\n                this.tableRows = instance.getRows();\n                this.models = this.sortBy(this.comparator);\n                this.tableRows = undefined;\n                if (!options.silent) {\n                    this.trigger('refresh', this, options);\n                }\n                return this;\n            },\n            remove:function (models, options) {\n                this.tableRows = instance.getRows();\n                Backbone.Collection.prototype.remove.apply(this, arguments);\n                this.tableRows = undefined;\n                return this;\n            }\n        });\n\n        return new RowsAwareCollection([], {\n            comparator:function (row) {\n                // sort models in collection based on dom ordering\n                var index,\n                    currentTableRows = this.tableRows !== undefined ? this.tableRows : instance.getRows();\n                currentTableRows.some(function (item, i) {\n                    if (item.model.id === row.id) {\n                        index = i;\n                        return true;\n                    }\n                });\n                return index;\n            }\n        });\n    },\n\n    /**\n     * Refreshes table with entries\n     *\n     * @param entries\n     */\n    populate: function (entries) {\n        if (this.options.reverseOrder) {\n            entries.reverse();\n        }\n\n        this.hideGlobalLoading();\n        if (entries && entries.length) {\n            // Empty the models collection\n            this._models.reset([], {silent: true});\n            // Add all the entries to collection and render them\n            this.renderRows(entries);\n            // show message to user if we have no entries\n            if (this.isEmpty()) {\n                this.showNoEntriesMsg();\n            }\n        } else {\n            this.showNoEntriesMsg();\n        }\n\n        // Ok, lets let everyone know that we are done...\n        this.$table\n                .append(this.$thead);\n\n        if (this.options.createPosition === 'bottom') {\n            this.$table.append(this.$tbody)\n                    .append(this.$create);\n        } else {\n            this.$table\n                    .append(this.$create)\n                    .append(this.$tbody);\n        }\n\n        this.$table.removeClass(this.classNames.LOADING)\n                .trigger(this._event.INITIALIZED, [this]);\n\n        triggerEvtForInst(this._event.INITIALIZED, this, [this]);\n\n        if (this.options.autoFocus) {\n            this.$table.find(':input:text:first').focus(); // set focus to first field\n        }\n    },\n\n    /**\n     * Shows loading indicator and text\n     *\n     * @return {RestfulTable}\n     */\n    showGlobalLoading: function () {\n        if (!this.$loading) {\n            this.$loading =  $('<div class=\"aui-restfultable-init\">' + throbber() +\n                '<span class=\"aui-restfultable-loading\">' + this.options.loadingMsg + '</span></div>');\n        }\n\n        if (!this.$loading.is(':visible')) {\n            this.$loading.insertAfter(this.$table);\n        }\n\n        return this;\n    },\n\n    /**\n     * Hides loading indicator and text\n     * @return {RestfulTable}\n     */\n    hideGlobalLoading: function () {\n        if (this.$loading) {\n            this.$loading.remove();\n        }\n        return this;\n    },\n\n\n    /**\n     * Adds row to collection and renders it\n     *\n     * @param {Object} values\n     * @param {number} index\n     * @return {RestfulTable}\n     */\n    addRow: function (values, index) {\n        var view;\n        var model;\n\n        if (!values.id) {\n            throw new Error('RestfulTable.addRow: to add a row values object must contain an id. ' +\n                'Maybe you are not returning it from your restend point?' +\n                'Recieved:' + JSON.stringify(values));\n        }\n\n        model = new this.options.model(values);\n\n\n        view = this._renderRow(model, index);\n\n        this._models.add(model);\n        this.removeNoEntriesMsg();\n\n        // Let everyone know we added a row\n        triggerEvtForInst(this._event.ROW_ADDED, this, [view, this]);\n        return this;\n    },\n\n    /**\n     * Provided a view, removes it from display and backbone collection\n     *\n     * @param row {Row} The row to remove.\n     */\n    removeRow: function (row) {\n        this._models.remove(row.model);\n        row.remove();\n\n        if (this.isEmpty()) {\n            this.showNoEntriesMsg();\n        }\n\n        // Let everyone know we removed a row\n        triggerEvtForInst(this._event.ROW_REMOVED, this, [row, this]);\n    },\n\n    /**\n     * Is there any entries in the table\n     *\n     * @return {Boolean}\n     */\n    isEmpty: function () {\n        return this._models.length === 0;\n    },\n\n    /**\n     * Gets all models\n     *\n     * @return {Backbone.Collection}\n     */\n    getModels: function () {\n        return this._models;\n    },\n\n    /**\n     * Gets table body\n     *\n     * @return {jQuery}\n     */\n    getTable: function () {\n        return this.$table;\n    },\n\n    /**\n     * Gets table body\n     *\n     * @return {jQuery}\n     */\n    getTableBody: function () {\n        return this.$tbody;\n    },\n\n    /**\n     * Gets create Row\n     *\n     * @return {EditRow}\n     */\n    getCreateRow: function () {\n        return this._createRow;\n    },\n\n    /**\n     * Gets the number of table columns, accounting for the number of\n     * additional columns added by RestfulTable itself\n     * (such as the drag handle column, buttons and actions columns)\n     *\n     * @return {Number}\n     */\n    getColumnCount: function () {\n        var staticFieldCount = 2; // accounts for the columns allocated to submit buttons and loading indicator\n        if (this.allowReorder) {\n            ++staticFieldCount;\n        }\n        return this.options.columns.length + staticFieldCount;\n    },\n\n    /**\n     * Get the Row that corresponds to the given <tr> element.\n     *\n     * @param {HTMLElement} tr\n     *\n     * @return {Row}\n     */\n    getRowFromElement: function (tr) {\n        return $(tr).data(this.dataKeys.ROW_VIEW);\n    },\n\n    /**\n     * Shows message {options.noEntriesMsg} to the user if there are no entries\n     *\n     * @return {RestfulTable}\n     */\n    showNoEntriesMsg: function () {\n\n        if (this.$noEntries) {\n            this.$noEntries.remove();\n        }\n\n        this.$noEntries = $('<tr>')\n                .addClass(this.classNames.NO_ENTRIES)\n                .append($('<td>')\n                .attr('colspan', this.getColumnCount())\n                .text(this.options.noEntriesMsg)\n        )\n                .appendTo(this.$tbody);\n\n        return this;\n    },\n\n    /**\n     * Removes message {options.noEntriesMsg} to the user if there ARE entries\n     *\n     * @return {RestfulTable}\n     */\n    removeNoEntriesMsg: function () {\n        if (this.$noEntries && this._models.length > 0) {\n            this.$noEntries.remove();\n        }\n        return this;\n    },\n\n    /**\n     * Gets the Row from their associated <tr> elements\n     *\n     * @return {Array}\n     */\n    getRows: function () {\n\n        var instance = this,\n                views = [];\n\n        this.$tbody.find('.' + this.classNames.READ_ONLY).each(function () {\n\n            var $row = $(this),\n                    view = $row.data(instance.dataKeys.ROW_VIEW);\n\n            if (view) {\n                views.push(view);\n            }\n        });\n\n        return views;\n    },\n\n    /**\n     * Appends entry to end or specified index of table\n     *\n     * @param {EntryModel} model\n     * @param index\n     *\n     * @return {jQuery}\n     */\n    _renderRow: function (model, index) {\n\n        var instance = this,\n                $rows = this.$tbody.find('.' + this.classNames.READ_ONLY),\n                $row,\n                view;\n\n        view = new this._rowClass({\n            model: model,\n            columns: this.options.columns,\n            allowEdit: this.options.allowEdit,\n            allowDelete: this.options.allowDelete,\n            allowReorder: this.options.allowReorder,\n            deleteConfirmation: this.options.deleteConfirmation\n        });\n\n        this.removeNoEntriesMsg();\n\n        view.bind(this._event.ROW_EDIT, function (field) {\n            triggerEvtForInst(this._event.EDIT_ROW, {}, [this, instance]);\n            instance.edit(this, field);\n        });\n\n        $row = view.render().$el;\n\n        if (index !== -1) {\n\n            if (typeof index === 'number' && $rows.length !== 0) {\n                $row.insertBefore($rows[index]);\n            } else {\n                this.$tbody.append($row);\n            }\n        }\n\n        $row.data(this.dataKeys.ROW_VIEW, view);\n\n        // deactivate all rows - used in the cases, such as opening a dropdown where you do not want the table editable\n        // or any interactions\n        view.bind(this._event.MODAL, function () {\n            instance.$table.removeClass(instance.classNames.ALLOW_HOVER);\n            instance.$tbody.sortable('disable');\n            instance.getRows().forEach(function (row) {\n                if (!instance.isRowBeingEdited(row)) {\n                    row.delegateEvents({}); // clear all events\n                }\n            });\n        });\n\n        // activate all rows - used in the cases, such as opening a dropdown where you do not want the table editable\n        // or any interactions\n        view.bind(this._event.MODELESS, function () {\n            instance.$table.addClass(instance.classNames.ALLOW_HOVER);\n            instance.$tbody.sortable('enable');\n            instance.getRows().forEach(function (row) {\n                if (!instance.isRowBeingEdited(row)) {\n                    row.delegateEvents(); // rebind all events\n                }\n            });\n        });\n\n        // ensure that when this row is focused no other are\n        this._applyFocusCoordinator(view);\n\n        this.trigger(this._event.ROW_INITIALIZED, view);\n\n        return view;\n    },\n\n    /**\n     * Returns if the row is edit mode or note.\n     *\n     * @param {Row} row Read-only row to check if being edited.\n     *\n     * @return {Boolean}\n     */\n    isRowBeingEdited: function (row) {\n\n        var isBeingEdited = false;\n\n        this.editRows.some(function (editRow) {\n            if (editRow.el === row.el) {\n                isBeingEdited = true;\n                return true;\n            }\n        });\n\n        return isBeingEdited;\n    },\n\n    /**\n     * Ensures that when supplied view is focused no others are\n     *\n     * @param {Backbone.View} view\n     * @return {RestfulTable}\n     */\n    _applyFocusCoordinator: function (view) {\n        var instance = this;\n\n        if (!view.hasFocusBound) {\n            view.hasFocusBound = true;\n\n            view.bind(this._event.FOCUS, function () {\n                if (instance.focusedRow && instance.focusedRow !== view) {\n                    instance.focusedRow.trigger(instance._event.BLUR);\n                }\n                instance.focusedRow = view;\n                if (view instanceof Row && instance._createRow) {\n                    instance._createRow.enable();\n                }\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * Remove specified row from collection holding rows being concurrently edited\n     *\n     * @param {EditRow} editView\n     *\n     * @return {RestfulTable}\n     */\n    _removeEditRow: function (editView) {\n        var index = $.inArray(editView, this.editRows);\n        this.editRows.splice(index, 1);\n        return this;\n    },\n\n    /**\n     * Focuses last row still being edited or create row (if it exists)\n     *\n     * @return {RestfulTable}\n     */\n    _shiftFocusAfterEdit: function () {\n\n        if (this.editRows.length > 0) {\n            this.editRows[this.editRows.length- 1].trigger(this._event.FOCUS);\n        } else if (this._createRow) {\n            this._createRow.trigger(this._event.FOCUS);\n        }\n\n        return this;\n    },\n\n    /**\n     * Evaluate if we save row when we blur. We can only do this when there is one row being edited at a time, otherwise\n     * it causes an infinite loop JRADEV-5325\n     *\n     * @return {boolean}\n     */\n    _saveEditRowOnBlur: function () {\n        return this.editRows.length <= 1;\n    },\n\n    /**\n     * Dismisses rows being edited concurrently that have no changes\n     */\n    dismissEditRows: function () {\n        this.editRows.forEach(function (editRow) {\n            if (!editRow.hasUpdates()) {\n                editRow.trigger(this._event.FINISHED_EDITING);\n            }\n        }, this);\n    },\n\n    /**\n     * Converts readonly row to editable view\n     *\n     * @param {Backbone.View} row\n     * @param {String} field - field name to focus\n     * @return {Backbone.View} editRow\n     */\n    edit: function (row, field) {\n        var instance = this;\n        var editRow = new this.options.views.editRow({\n            el: row.el,\n            columns: this.options.columns,\n            isUpdateMode: true,\n            allowReorder: this.options.allowReorder,\n            fieldFocusSelector: this.options.fieldFocusSelector,\n            model: row.model,\n            cancelAccessKey: this.options.cancelAccessKey,\n            submitAccessKey: this.options.submitAccessKey\n        });\n        var values = row.model.toJSON();\n\n        values.update = true;\n        editRow.render({\n            errors: {},\n            update: true,\n            values: values\n        })\n            .bind(instance._event.UPDATED, function (model, focusUpdated) {\n                instance._removeEditRow (this);\n                this.unbind();\n                row.render().delegateEvents(); // render and rebind events\n                row.trigger(instance._event.UPDATED); // trigger blur fade out\n                if (focusUpdated !== false) {\n                    instance._shiftFocusAfterEdit();\n                }\n            })\n            .bind(instance._event.VALIDATION_ERROR, function () {\n                this.trigger(instance._event.FOCUS);\n            })\n            .bind(instance._event.FINISHED_EDITING, function () {\n                instance._removeEditRow(this);\n                row.render().delegateEvents();\n                this.unbind();  // avoid any other updating, blurring, finished editing, cancel events being fired\n            })\n            .bind(instance._event.CANCEL, function () {\n                instance._removeEditRow(this);\n                this.unbind();  // avoid any other updating, blurring, finished editing, cancel events being fired\n                row.render().delegateEvents(); // render and rebind events\n                instance._shiftFocusAfterEdit();\n            })\n            .bind(instance._event.BLUR, function () {\n                instance.dismissEditRows(); // dismiss edit rows that have no changes\n                if (instance._saveEditRowOnBlur()) {\n                    this.trigger(instance._event.SAVE, false);  // save row, which if successful will call the updated event above\n                }\n            });\n\n        // Ensure that if focus is pulled to another row, we blur the edit row\n        this._applyFocusCoordinator(editRow);\n\n        // focus edit row, which has the flow on effect of blurring current focused row\n        editRow.trigger(instance._event.FOCUS, field);\n\n        // disables form fields\n        if (instance._createRow) {\n            instance._createRow.disable();\n        }\n\n        this.editRows.push(editRow);\n\n        return editRow;\n    },\n\n\n    /**\n     * Renders all specified rows\n     *\n     * @param rows {Array<Backbone.Model>} array of objects describing Backbone.Model's to render\n     * @return {RestfulTable}\n     */\n    renderRows: function (rows) {\n        var comparator = this._models.comparator;\n        var els = [];\n\n        this._models.comparator = undefined; // disable temporarily, assume rows are sorted\n\n        var models = _.map(rows, function (row) {\n            var model = new this.options.model(row);\n            els.push(this._renderRow(model, -1).el);\n            return model;\n        }, this);\n\n        this._models.add(models, {silent:true});\n        this._models.comparator = comparator;\n        this.removeNoEntriesMsg();\n        this.$tbody.append(els);\n\n        return this;\n    },\n\n    /**\n     * Gets default options\n     *\n     * @param {Object} options\n     */\n    _getDefaultOptions: function (options) {\n        return {\n            model: options.model || EntryModel,\n            allowEdit: true,\n            views: {\n                editRow: EditRow,\n                row: Row\n            },\n            Collection: Backbone.Collection.extend({\n                url: options.resources.self,\n                model: options.model || EntryModel\n            }),\n            allowReorder: false,\n            fieldFocusSelector: function (name) {\n                return ':input[name=' + name + '], #' + name;\n            },\n            loadingMsg: options.loadingMsg || AJS.I18n.getText('aui.words.loading')\n        };\n    }\n});\n\nRestfulTable.ClassNames = classNames;\nRestfulTable.CustomCreateView = CustomCreateView;\nRestfulTable.CustomEditView = CustomEditView;\nRestfulTable.CustomReadView = CustomReadView;\nRestfulTable.DataKeys = dataKeys;\nRestfulTable.EditRow = EditRow;\nRestfulTable.EntryModel = EntryModel;\nRestfulTable.Events = events;\nRestfulTable.Row = Row;\nRestfulTable.Throbber = throbber;\n\nglobalize('RestfulTable', RestfulTable);\n\nexport default RestfulTable;\n"],"sourceRoot":"/source/"}