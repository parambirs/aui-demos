{"version":3,"sources":["js/aui/binders/placeholder.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,gBAAY,CAAC;;;;;;;;AAKb,KAAC,YAAY;;AAET,YAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;;AAE3C,YAAI,aAAa,IAAI,IAAI,EAAE;AACvB,mBAAO;SACV;;;;;;;;;;;;;;AAcD,4BAAO,QAAQ,CAAC,aAAa,EAAE;AAC3B,oBAAQ,EAAE,oBAAoB;AAC9B,eAAG,EAAE,aAAU,OAAO,EAAE;AACpB,oBAAI,KAAK,GAAG,mBAAE,OAAO,CAAC,CAAC;AACvB,oBAAI,gBAAgB,GAAG,SAAnB,gBAAgB,GAAe;AAC3B,wBAAI,CAAC,cAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;AAC7B,6BAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAC/B,QAAQ,CAAC,mBAAmB,CAAC,CAC7B,OAAO,CAAC,mBAAmB,CAAC,CAAC;qBACrC;iBACJ,CAAC;;AAEN,gCAAgB,EAAE,CAAC;AACnB,qBAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,YAAY;AAC3C,wBAAI,KAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AACrC,6BAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;qBAClD;iBACJ,CAAC,CAAC;aACN;SACJ,CAAC,CAAC;KACN,CAAA,EAAG,CAAC","file":"js/aui/binders/placeholder.js","sourcesContent":["'use strict';\n\nimport $ from '../jquery';\nimport binder from '../binder';\n\n(function () {\n    // browser supports placeholder, no need to do anything\n    var temp = document.createElement('input');\n\n    if ('placeholder' in temp) {\n        return;\n    }\n\n    /**\n     * Displays default text in the input field when its value is empty.\n     * If the browser supports placeholder input attributes (HTML5), then\n     * we skip this component.\n     *\n     * Usage:\n     * <pre>\n     * &lt;input placeholder='Some default text'&gt;\n     * </pre>\n     *\n     * Events thrown: reset.placeholder\n     */\n    binder.register('placeholder', {\n        selector: 'input[placeholder]',\n        run: function (element) {\n            var $this = $(element);\n            var applyDefaultText = function () {\n                    if (!$.trim($this.val()).length) {\n                        $this.val($this.attr('placeholder'))\n                            .addClass('placeholder-shown')\n                            .trigger('reset.placeholder');\n                    }\n                };\n\n            applyDefaultText();\n            $this.blur(applyDefaultText).focus(function () {\n                if ($this.hasClass('placeholder-shown')) {\n                    $this.val('').removeClass('placeholder-shown');\n                }\n            });\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}