{"version":3,"sources":["js/aui/index-of.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,gBAAY,CAAC;;;;;;;;;;;;;;;AAab,aAAS,OAAO,CAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE;AACtC,YAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;;AAE1B,YAAI,CAAC,SAAS,EAAE;AACZ,qBAAS,GAAG,CAAC,CAAC;SACjB,MAAM,IAAI,SAAS,GAAG,CAAC,EAAE;AACtB,qBAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC,CAAC;SAC/C;;AAED,aAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,gBAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACnB,uBAAO,CAAC,CAAC;aACZ;SACJ;;AAED,eAAO,CAAC,CAAC,CAAC;KACb;;AAED,+BAAU,SAAS,EAAE,OAAO,CAAC,CAAC;;qBAEf,OAAO","file":"js/aui/index-of.js","sourcesContent":["'use strict';\n\nimport globalize from './internal/globalize';\n\n/**\n * Finds the index of an element in the array.\n *\n * @param {Array} The array being searched.\n * @param {Mixed} item Element which will be searched for.\n * @param {Integer} fromIndex The index from which the item will be searched. Negative values will search from the end of the array.\n *\n * @returns {Integer}\n */\nfunction indexOf (array, item, fromIndex) {\n    var length = array.length;\n\n    if (!fromIndex) {\n        fromIndex = 0;\n    } else if (fromIndex < 0) {\n        fromIndex = Math.max(0, length + fromIndex);\n    }\n\n    for (var i = fromIndex; i < length; i++) {\n        if (array[i] === item) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nglobalize('indexOf', indexOf);\n\nexport default indexOf;\n"],"sourceRoot":"/source/"}