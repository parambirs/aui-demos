{"version":3,"sources":["js/aui/events.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,gBAAY,CAAC;;;;;;;;;;;;;;;;;;;;AAab,aAAS,UAAU,CAAE,IAAI,EAAE,IAAI,EAAE;AAC7B,sDAAgB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACxC;;;;;;;;AAQD,aAAS,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE;AAC1B,sDAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACrC;;;;;;;;;;;;AAYD,aAAS,iBAAiB,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AACzC,2BAAE,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3B,kBAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACtB,YAAI,IAAI,CAAC,EAAE,EAAE;AACT,sBAAU,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;SACzC;KACJ;;AAED,YAiBI,OAAO,GAjBX,OAAO,GAAG,qBAAU,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE;AACvC,oBAAY,EAAE,OAAO;KACxB,CAAC,CAAC;;AAEH,YAcI,UAAU,GAdd,UAAU,GAAG,qBAAU,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE;AAChD,oBAAY,EAAE,OAAO;KACxB,CAAC,CAAC;;AAEH,YAWI,iBAAiB,GAXrB,iBAAiB,GAAG,qBAAU,EAAE,CAAC,iBAAiB,EAAE,mBAAmB,EAAE;AACrE,oBAAY,EAAE,OAAO;KACxB,CAAC,CAAC;;AAEH,+BAAU,SAAS,EAAE,OAAO,CAAC,CAAC;AAC9B,+BAAU,YAAY,EAAE,UAAU,CAAC,CAAC;AACpC,+BAAU,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;YAG9C,OAAO,GAAP,OAAO;YACP,UAAU,GAAV,UAAU;YACV,iBAAiB,GAAjB,iBAAiB","file":"js/aui/events.js","sourcesContent":["'use strict';\n\nimport $ from './jquery';\nimport * as deprecate from './internal/deprecation';\nimport createElement from './create-element';\nimport globalize from './internal/globalize';\n\n/**\n * Triggers a custom event on the AJS object\n *\n * @param {String} name - name of event\n * @param {Array} args - args for event handler\n */\nfunction triggerEvt (name, args) {\n    $(createElement).trigger(name, args);\n}\n\n/**\n * Binds handler to the AJS object\n *\n * @param {String} name\n * @param {Function} func\n */\nfunction bindEvt (name, func) {\n    $(createElement).bind(name, func);\n}\n\n/**\n * Some generic error handling that fires event in multiple contexts\n * - on AJS object\n * - on Instance\n * - on AJS object with prefixed id.\n *\n * @param evt\n * @param inst\n * @param args\n */\nfunction triggerEvtForInst (evt, inst, args) {\n    $(inst).trigger(evt, args);\n    triggerEvt(evt, args);\n    if (inst.id) {\n        triggerEvt(inst.id + '-' + evt, args);\n    }\n}\n\nbindEvt = deprecate.fn(bindEvt, 'bindEvt', {\n    sinceVersion: '5.8.0'\n});\n\ntriggerEvt = deprecate.fn(triggerEvt, 'triggerEvt', {\n    sinceVersion: '5.8.0'\n});\n\ntriggerEvtForInst = deprecate.fn(triggerEvtForInst, 'triggerEvtForInst', {\n    sinceVersion: '5.8.0'\n});\n\nglobalize('bindEvt', bindEvt);\nglobalize('triggerEvt', triggerEvt);\nglobalize('triggerEvtForInst', triggerEvtForInst);\n\nexport {\n    bindEvt,\n    triggerEvt,\n    triggerEvtForInst\n};\n"],"sourceRoot":"/source/"}