(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', './jquery', './create-element', './internal/globalize'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('./jquery'), require('./create-element'), require('./internal/globalize'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global.$, global.createElement, global.globalize);
        global.onTextResize = mod.exports;
    }
})(this, function (exports, module, _jquery, _createElement, _internalGlobalize) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _$ = _interopRequireDefault(_jquery);

    var _createElement2 = _interopRequireDefault(_createElement);

    var _globalize = _interopRequireDefault(_internalGlobalize);

    function onTextResize(f) {
        if (typeof f === 'function') {
            if (onTextResize['on-text-resize']) {
                onTextResize['on-text-resize'].push(function (emsize) {
                    f(emsize);
                });
            } else {
                var em = (0, _createElement2['default'])('div');

                em.css({
                    width: '1em',
                    height: '1em',
                    position: 'absolute',
                    top: '-9999em',
                    left: '-9999em'
                });

                (0, _$['default'])('body').append(em);
                em.size = em.width();

                setInterval(function () {
                    if (em.size !== em.width()) {
                        em.size = em.width();

                        for (var i = 0, ii = onTextResize['on-text-resize'].length; i < ii; i++) {
                            onTextResize['on-text-resize'][i](em.size);
                        }
                    }
                }, 0);
                onTextResize.em = em;
                onTextResize['on-text-resize'] = [function (emsize) {
                    f(emsize);
                }];
            }
        }
    }

    (0, _globalize['default'])('onTextResize', onTextResize);

    module.exports = onTextResize;
});
//# sourceMappingURL=../../js/aui/on-text-resize.js.map