{"version":3,"sources":["js/aui/checkbox-multiselect.js"],"names":[],"mappings":"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","file":"js/aui/checkbox-multiselect.js","sourcesContent":["'use strict';\n\nimport $ from './jquery';\nimport './dropdown2';\nimport './tooltip';\nimport './i18n';\nimport amdify from './internal/amdify';\nimport skate from './internal/skate';\nimport uniqueId from './unique-id';\n\nvar templates = {\n    dropdown: function (items) {\n        function createSection() {\n            return $('<div class=\"aui-dropdown2-section\">');\n        }\n\n        // clear items section\n        var $clearItemsSection = createSection();\n\n        $('<button />').attr({\n            type: 'button',\n            'data-aui-checkbox-multiselect-clear': '',\n            class: 'aui-button aui-button-link'\n        })\n            .text(AJS.I18n.getText('aui.checkboxmultiselect.clear.selected'))\n            .appendTo($clearItemsSection);\n\n        // list of items\n        var $section = createSection();\n        var $itemList = $('<ul />').appendTo($section);\n\n        $.each(items, function (idx, item) {\n            var $li = $('<li />').attr({\n                class: item.styleClass || ''\n            }).appendTo($itemList);\n\n            var $a =  $('<a />')\n                .text(item.label)\n                .attr('data-value', item.value)\n                .addClass('aui-dropdown2-checkbox aui-dropdown2-interactive')\n                .appendTo($li);\n\n            if (item.icon) {\n                $('<span />')\n                    .addClass('aui-icon')\n                    .css('backgroundImage', 'url(' + item.icon + ')\")')\n                    .appendTo($a);\n            }\n\n            if (item.selected) {\n                $a.addClass('aui-dropdown2-checked');\n            }\n        });\n\n        return $('<div />')\n            .append($clearItemsSection)\n            .append($section)\n            .html();\n    },\n\n    furniture: function (name, optionsHtml) {\n        var dropdownId = name + '-dropdown';\n\n        var $select = $('<select />').attr({\n            name: name,\n            multiple: 'multiple'\n        }).html(optionsHtml);\n\n        var $dropdown = $('<div>')\n            .attr({\n                id: dropdownId,\n                class: 'aui-checkbox-multiselect-dropdown aui-dropdown2 aui-style-default'\n            });\n\n        var $button = $('<button />')\n            .attr({\n                class: 'aui-checkbox-multiselect-btn aui-button aui-dropdown2-trigger',\n                type: 'button',\n                'aria-owns': dropdownId,\n                'aria-haspopup': true\n            });\n\n        return $('<div />')\n            .append($select)\n            .append($button)\n            .append($dropdown)\n            .html();\n    }\n};\n\n/**\n * Handles when user clicks an item in the dropdown list. Either selects or unselects the corresponding\n * option in the <select>.\n * @private\n */\nfunction handleDropdownSelection (e) {\n    var $a = $(e.target);\n    var value = $a.attr('data-value');\n    updateOption(this, value, $a.hasClass('aui-dropdown2-checked'));\n}\n\n/**\n * Selects or unselects the <option> corresponding the given value.\n * @private\n * @param component - Checkbox MultiSelect web component\n * @param value - value of option to update\n * @param {Boolean} selected - select or unselect it.\n */\nfunction updateOption (component, value, selected) {\n    var $toUpdate = component.$select.find('option').filter(function () {\n        var $this = $(this);\n        return $this.attr('value') === value && $this.prop('selected') !== selected;\n    });\n    if ($toUpdate.length) {\n        $toUpdate.prop('selected', selected);\n        component.$select.trigger('change');\n    }\n}\n\n/**\n * Enables 'clear all' button if there are any selected <option>s, otherwise disables it.\n * @private\n */\nfunction updateClearAll (component) {\n    component.$dropdown.find('[data-aui-checkbox-multiselect-clear]').prop('disabled', function () {\n        return getSelectedDescriptors(component).length < 1;\n    });\n}\n\n/**\n * Gets button title used for tipsy. Is blank when dropdown is open so we don't get tipsy hanging over options.\n * @private\n * @param component\n * @returns {string}\n */\nfunction getButtonTitle (component) {\n    return component.$dropdown.is('[aria-hidden=false]') ? '' : getSelectedLabels(component).join(', ');\n}\n\n/**\n * Converts a jQuery collection of <option> elements into an object that describes them.\n * @param {jQuery} $options\n * @returns {Array<Object>}\n * @private\n */\nfunction mapOptionDescriptors ($options) {\n    return $options.map(function () {\n        var $option = $(this);\n        return {\n            value: $option.val(),\n            label: $option.text(),\n            icon: $option.data('icon'),\n            styleClass: $option.data('styleClass'),\n            title: $option.attr('title'),\n            disabled: $option.attr('disabled'),\n            selected: $option.attr('selected')\n        };\n    });\n}\n\n/**\n * Gets label for when nothing is selected\n * @returns {string}\n * @private\n */\nfunction getImplicitAllLabel (component) {\n    return $(component).data('allLabel') || 'All';\n}\n\n\n/**\n * Renders dropdown with list of items representing the selected or unselect state of the <option>s in <select>\n * @private\n */\nfunction renderDropdown (component) {\n    component.$dropdown.html(templates.dropdown(getDescriptors(component)));\n    updateClearAll(component);\n}\n\n/**\n * Renders button with the selected <option>'s innerText in a comma seperated list. If nothing is selected 'All'\n * is displayed.\n * @private\n */\nfunction renderButton (component) {\n    var selectedLabels = getSelectedLabels(component);\n    var label = isImplicitAll(component) ? getImplicitAllLabel(component) : selectedLabels.join(', ');\n    component.$btn.text(label);\n}\n\n/**\n * Gets descriptor for selected options, the descriptor is an object that contains meta information about\n * the option, such as value, label, icon etc.\n * @private\n * @returns Array<Object>\n */\nfunction getDescriptors (component) {\n    return mapOptionDescriptors(component.getOptions());\n}\n\n/**\n * Gets descriptor for selected options, the descriptor is an object that contains meta information about\n * the option, such as value, label, icon etc.\n * @private\n * @returns Array<Object>\n */\nfunction getSelectedDescriptors (component) {\n    return mapOptionDescriptors(component.getSelectedOptions());\n}\n\n/**\n * Gets the innerText of the selected options\n * @private\n * @returns Array<String>\n */\nfunction getSelectedLabels (component) {\n    return $.map(getSelectedDescriptors(component), function (descriptor) {\n        return descriptor.label;\n    });\n}\n\n/**\n * If nothing is selected, we take this to mean that everything is selected.\n * @returns Boolean\n */\nfunction isImplicitAll (component) {\n    return getSelectedDescriptors(component).length === 0;\n}\n\nlet checkboxMultiselect = skate('aui-checkbox-multiselect', {\n    attached: function (component) {\n        // This used to be template logic, however, it breaks tests if we\n        // keep it there after starting to use native custom elements. This\n        // should be refactored.\n        //\n        // Ideally we should be templating the element within the \"template\"\n        // hook which will ensure it's templated prior to calling the\n        // \"attached\" callback.\n        var name = component.getAttribute('name') || AJS.id('aui-checkbox-multiselect-');\n        component.innerHTML = templates.furniture(name, component.innerHTML);\n\n        component.$select = $('select', component)\n            .change(function () {\n                renderButton(component);\n                updateClearAll(component);\n            });\n\n        component.$dropdown = $('.aui-checkbox-multiselect-dropdown', component)\n            .on('aui-dropdown2-item-check', handleDropdownSelection.bind(component))\n            .on('aui-dropdown2-item-uncheck', handleDropdownSelection.bind(component))\n            .on('click', 'button[data-aui-checkbox-multiselect-clear]', component.deselectAllOptions.bind(component));\n\n        component.$btn = $('.aui-checkbox-multiselect-btn', component)\n            .tooltip({\n                title: function () {\n                    return getButtonTitle(component);\n                }\n            });\n\n        renderButton(component);\n        renderDropdown(component);\n    },\n    prototype: {\n\n        /**\n         * Gets all options regardless of selected or unselected\n         * @returns {jQuery}\n         */\n        getOptions: function () {\n            return this.$select.find('option');\n        },\n\n        /**\n         * Gets all selected options\n         * @returns {jQuery}\n         */\n        getSelectedOptions: function () {\n            return this.$select.find('option:selected');\n        },\n\n        /**\n         * Sets <option> elements matching given value to selected\n         */\n        selectOption: function (value) {\n            updateOption(this, value, true);\n        },\n\n        /**\n         * Sets <option> elements matching given value to unselected\n         */\n        unselectOption: function (value) {\n            updateOption(this, value, false);\n        },\n\n        /**\n         * Gets value of <select>\n         * @returns Array\n         */\n        getValue: function () {\n            return this.$select.val();\n        },\n\n        /**\n         * Unchecks all items in the dropdown and in the <select>\n         */\n        deselectAllOptions: function () {\n            this.$select.val([]).trigger('change');\n            this.$dropdown.find('.aui-dropdown2-checked,.checked').removeClass('aui-dropdown2-checked checked');\n        },\n\n        /**\n         * Adds an option to the <select>\n         * @param descriptor\n         */\n        addOption: function (descriptor) {\n            $('<option />').attr({\n                value: descriptor.value,\n                icon: descriptor.icon,\n                disabled: descriptor.disabled,\n                selected: descriptor.selected,\n                title: descriptor.title\n            })\n                .text(descriptor.label)\n                .appendTo(this.$select);\n            renderButton(this);\n            renderDropdown(this);\n        },\n\n        /**\n         * Removes options matching value from <select>\n         * @param value\n         */\n        removeOption: function (value) {\n            this.$select.find(\"[value='\" + value + \"']\").remove();\n            renderButton(this);\n            renderDropdown(this);\n        }\n    }\n});\n\namdify('aui/checkbox-multiselect');\n"],"sourceRoot":"/source/"}