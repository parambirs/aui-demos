{"version":3,"sources":["js/aui/template.js"],"names":[],"mappings":"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","file":"js/aui/template.js","sourcesContent":["'use strict';\n\nimport $ from './jquery';\nimport escapeHtml from './escape-html';\nimport globalize from './internal/globalize';\n\n/**\n * Creates an object with methods for template support.\n *\n * See <a href=\"http://confluence.atlassian.com/display/AUI/AJS.template\">CAC Documentation</a>.\n *\n * @constructor\n * @class template\n * @namespace AJS\n */\nvar template = (function ($) {\n    var tokenRegex = /\\{([^\\}]+)\\}/g; // matches \"{xxxxx}\"\n    var objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g; // matches \".xxxxx\" or \"[\"xxxxx\"]\" to run over object properties\n\n    // internal function\n    // parses \"{xxxxx}\" and returns actual value from the given object that matches the expression\n    var replacer = function (all, key, obj, isHTML) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name + ':html' in res) {\n                        res = res[name + ':html'];\n                        isHTML = true;\n                    } else if (name in res) {\n                        res = res[name];\n                    }\n                    if (isFunc && typeof res === 'function') {\n                        res = res();\n                    }\n                }\n            });\n\n            // if not found restore original value\n            if (res == null || res === obj) {\n                res = all;\n            }\n\n            res = String(res);\n\n            if (!isHTML) {\n                res = T.escape(res);\n            }\n\n            return res;\n        };\n    /**\n     * Replaces tokens in the template with corresponding values without HTML escaping\n     * @method fillHtml\n     * @param obj {Object} to populate the template with\n     * @return {Object} the template object\n     */\n    var fillHtml = function (obj) {\n            this.template = this.template.replace(tokenRegex, function (all, key) {\n                return replacer(all, key, obj, true);\n            });\n            return this;\n        };\n    /**\n     * Replaces tokens in the template with corresponding values with HTML escaping\n     * @method fill\n     * @param obj {Object} to populate the template with\n     * @return {Object} the template object\n     */\n    var fill = function (obj) {\n            this.template = this.template.replace(tokenRegex, function (all, key) {\n                return replacer(all, key, obj);\n            });\n            return this;\n        };\n    /**\n     * Returns the current templated string.\n     * @method toString\n     * @return {String} the current template\n     */\n    var toString = function () {\n            return this.template;\n        };\n\n    // internal function\n    var T = function (s) {\n        function res() {\n            return res.template;\n        }\n\n        /**\n         * The current templated string\n         * @property template\n         */\n        res.template = String(s);\n        res.toString = res.valueOf = toString;\n        res.fill = fill;\n        res.fillHtml = fillHtml;\n        return res;\n    };\n    var cache = {};\n    var count = [];\n\n    var findScripts = function (title) {\n        return $('script').filter(function () {\n            return this.getAttribute('title') === title;\n        });\n    };\n\n    // returns template taken form the script tag with given title. Type agnostic, but better put type=\"text/x-template\"\n    T.load = function (title) {\n        title = String(title);\n        if (!cache.hasOwnProperty(title)) {\n            if (count.length >= 1e3) {\n                delete cache[count.shift()]; // enforce maximum cache size\n            }\n            count.push(title);\n            cache[title] = findScripts(title)[0].text;\n        }\n        return this(cache[title]);\n    };\n\n    // escape HTML dangerous characters\n    T.escape = escapeHtml;\n\n    return T;\n})($);\n\nglobalize('template', template);\n\nexport default template;\n"],"sourceRoot":"/source/"}