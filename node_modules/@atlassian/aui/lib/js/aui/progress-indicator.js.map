{"version":3,"sources":["js/aui/progress-indicator.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,gBAAY,CAAC;;;;;;;;AAMb,aAAS,cAAc,CAAC,YAAY,EAAE,qBAAqB,EAAE,aAAa,EAAE;AACxE,+BAJK,cAAc,EAIJ,YAAY,CAAC,CAAC;AAC7B,oBAAY,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACrD,6BAAqB,CAAC,IAAI,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;KAC3D;;AAED,QAAI,YAAY,GAAG;AACf,cAAM,EAAE,gBAAU,OAAO,EAAE,KAAK,EAAE;AAC9B,gBAAI,qBAAqB,GAAG,mBAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;AAC/C,gBAAI,YAAY,GAAG,qBAAqB,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;AACnF,gBAAI,eAAe,GAAG,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;AAE3D,gBAAI,oBAAoB,GAAG,qCAAqC,CAAC;AACjE,gBAAI,qBAAqB,GAAG,sCAAsC,CAAC;AACnE,gBAAI,aAAa,GAAG,mCAAmC,CAAC;;AAExD,gBAAI,eAAe,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;;AAGhE,gBAAI,eAAe,EAAE;AACjB,4BAAY,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aAChC;;AAED,gBAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;AACvD,qCAAqB,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;;;AAG/E,oBAAI,YAAY,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,eAAe,CAAC;AAC7D,oBAAI,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;AAC/B,oBAAI,UAAU,GAAG,YAAY,CAAC;;;AAG9B,oBAAI,OAAO,KAAK,CAAC,UAAU,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,gBAAgB,KAAK,QAAQ,EAAE;AACpF,gCAAY,CAAC,GAAG,CAAC,aAAa,EAAE,YAAY;AACxC,6CAAqB,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;qBACjF,CAAC,CAAC;AACH,kCAAc,CAAC,YAAY,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;iBAC9D,MAAM;AACH,kCAAc,CAAC,YAAY,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;AAC3D,yCAAqB,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;iBACjF;aAGJ;AACD,mBAAO,qBAAqB,CAAC;SAChC;;AAED,wBAAgB,EAAE,0BAAU,OAAO,EAAE;AACjC,gBAAI,qBAAqB,GAAG,mBAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;AAC/C,gBAAI,YAAY,GAAG,qBAAqB,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;;AAEnF,iCAAqB,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAC/C,mCAvDC,cAAc,EAuDA,qBAAqB,CAAC,CAAC;AACtC,wBAAY,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SACrC;KACJ,CAAC;;AAEF,+BAAU,cAAc,EAAE,YAAY,CAAC,CAAC;;qBAEzB,YAAY","file":"js/aui/progress-indicator.js","sourcesContent":["'use strict';\n\nimport $ from './jquery';\nimport { recomputeStyle } from './internal/animation';\nimport globalize from './internal/globalize';\n\nfunction updateProgress($progressBar, $progressBarContainer, progressValue) {\n    recomputeStyle($progressBar);\n    $progressBar.css('width', progressValue * 100 + '%');\n    $progressBarContainer.attr('data-value', progressValue);\n}\n\nvar progressBars = {\n    update: function (element, value) {\n        var $progressBarContainer = $(element).first();\n        var $progressBar = $progressBarContainer.children('.aui-progress-indicator-value');\n        var currentProgress = $progressBar.attr('data-value') || 0;\n\n        var afterTransitionEvent = 'aui-progress-indicator-after-update';\n        var beforeTransitionEvent = 'aui-progress-indicator-before-update';\n        var transitionEnd = 'transitionend webkitTransitionEnd';\n\n        var isIndeterminate = !$progressBarContainer.attr('data-value');\n\n        //if the progress bar is indeterminate switch it.\n        if (isIndeterminate) {\n            $progressBar.css('width', 0);\n        }\n\n        if (typeof value === 'number' && value <= 1 && value >= 0) {\n            $progressBarContainer.trigger(beforeTransitionEvent, [currentProgress, value]);\n\n            //detect whether transitions are supported\n            var documentBody = document.body || document.documentElement;\n            var style = documentBody.style;\n            var transition = 'transition';\n\n            //trigger the event after transition end if supported, otherwise just trigger it\n            if (typeof style.transition === 'string' || typeof style.WebkitTransition === 'string') {\n                $progressBar.one(transitionEnd, function () {\n                    $progressBarContainer.trigger(afterTransitionEvent, [currentProgress, value]);\n                });\n                updateProgress($progressBar, $progressBarContainer, value);\n            } else {\n                updateProgress($progressBar, $progressBarContainer, value);\n                $progressBarContainer.trigger(afterTransitionEvent, [currentProgress, value]);\n            }\n\n\n        }\n        return $progressBarContainer;\n    },\n\n    setIndeterminate: function (element) {\n        var $progressBarContainer = $(element).first();\n        var $progressBar = $progressBarContainer.children('.aui-progress-indicator-value');\n\n        $progressBarContainer.removeAttr('data-value');\n        recomputeStyle($progressBarContainer);\n        $progressBar.css('width', '100%');\n    }\n};\n\nglobalize('progressBars', progressBars);\n\nexport default progressBars;\n"],"sourceRoot":"/source/"}