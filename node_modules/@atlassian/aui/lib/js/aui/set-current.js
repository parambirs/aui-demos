(function (global, factory) {
    if (typeof define === 'function' && define.amd) {
        define(['exports', 'module', './jquery', './internal/deprecation', './internal/globalize'], factory);
    } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        factory(exports, module, require('./jquery'), require('./internal/deprecation'), require('./internal/globalize'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, mod, global.$, global.deprecation, global.globalize);
        global.setCurrent = mod.exports;
    }
})(this, function (exports, module, _jquery, _internalDeprecation, _internalGlobalize) {
    'use strict';

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

    var _$ = _interopRequireDefault(_jquery);

    var _globalize = _interopRequireDefault(_internalGlobalize);

    /**
     * Shortcut function adds or removes 'current' classname to an element based on a passed boolean.
     *
     * @param {String | Element} element The element or an ID to show or hide.
     * @param {boolean} show True to add 'current' class, false to remove.
     *
     * @returns {undefined}
     */
    function setCurrent(element, current) {
        if (!(element = (0, _$['default'])(element))) {
            return;
        }

        if (current) {
            element.addClass('current');
        } else {
            element.removeClass('current');
        }
    }

    var setCurrent = (0, _internalDeprecation.fn)(setCurrent, 'setCurrent', {
        sinceVersion: '5.9.0',
        extraInfo: 'No alternative will be provided. Use jQuery.addClass() / removeClass() instead.'
    });

    (0, _globalize['default'])('setCurrent', setCurrent);

    module.exports = setCurrent;
});
//# sourceMappingURL=../../js/aui/set-current.js.map